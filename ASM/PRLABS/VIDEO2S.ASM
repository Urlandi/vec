;Семестровая работа выполнена Васильевым Михаилом - ИВТ 262
;Задать массив из 5 элементов, если индекс второго положительного больше 3
;обменять его с первым элементом массива, если нет вывести на экран
;перемещающимся по горизонтали.

VID_SEG   EQU 0B800H   ;Сегмент видео-памяти в текстовом режиме
VID_HALF  EQU 1920     ;Первый элемент в 12 строке
VID_SIZE  EQU 2078     ;Последний элемент в 12 строке

        .MODEL TINY    ;.COM файл
        .DATA          ;Сегмент данных

atv     DB  10, -3, 3, 30, 12 ;Массив для анализа
outmsg  DB 'В массиве нет 2-х положительных элементов$';Строки сообщений
chgmsg  DB 'Произошел обмен элемeнтов$'                ;вариантов работы

        .CODE          ;Сегмент кода
        .STARTUP       ;Точка входа

;Выполняем перевод экрана в текстовый режим 80х25
        MOV AX,03H     ;0-ая функция видео-сервиса BIOS API 3-й режим - 80х25
        INT 10H        ;Вызов видео сервиса BIOS API

        MOV SI,OFFSET atv ;SI=адрес массива для анализа
        MOV DI,SI         ;Запоминаем адрес первого элемента массива
        MOV CX,5          ;Настраиваем цикл проверки
        XOR BX,BX         ;Обнуляем счетчик положительных элементов
        CLD               ;Адреса возрастают
LC:     LODSB             ;AL=элемент из массива по адресу SI. SI=SI+1
        CMP AL,0          ;Проверка на положительный
        JS NC             ;Прыжок если отрицательный

        INC BX            ;Увеличиваем счетчик положительных
        CMP BX,2          ;Проверяем на второй положительный
        JE  TRUES2        ;Прыжок если второй положительный

NC:     LOOP LC           ;Повторяем пока CX>0

;В массиве нет двух положительных элементов
        MOV AH,09H        ;9-ая функция DOS API INT 21H - вывод строки
        LEA DX,outmsg     ;Адрес строки для вывода
        INT 21H           ;Вывод строки на экран
        JMP Q             ;Переход на конец программы

TRUES2: CMP CX,3           ;Если индекс второго положительного больше 3
        JB  CHNG           ;Переходим на обмен, иначе вывод на экран

;Подготовка к выводу
        MOV DL,AL
        MOV AX,VID_SEG ;AX = адрес видео сегмента в текстовом режиме
        MOV ES,AX      ;ES = AX = адрес видео сегмента в текстовом режиме
        MOV DH,0CH     ;Фон - черный, символ - ярко-красный

        MOV AX,0720H   ;Символ для стирания - пробел, фон - черный

        MOV DI,VID_HALF;DI=адрес первого элемента в 12 строке

        XOR BX,BX      ;Определяем системную область памяти
        MOV DS,BX      ;Сегмент 0
        MOV SI,046CH   ;Адрес числа - количество тиков таймера с полуночи

;Вывод в видео память
GOGO:   MOV ES:[DI],DX ;Пишем в видео память символ из DL, c атрибутом из DH

;Задержка по времени
        MOV CL,DS:[SI] ;Младший байт загружаем в CL
        ADD CL,3       ;Промежуток времени 0.2с

STOPT:  CMP DS:[SI],CL ;Проверяем текущее время
        JNE STOPT      ;Если время не подошло повторяем проверку

        MOV ES:[DI],AX ;Стираем символ чтобы переместить его дальше

        INC DI
        INC DI         ;DI=DI+2
        CMP DI,VID_SIZE;Если в переделах строки
        JNA GOGO       ;Повторяем операцию
        JMP Q          ;Переход на конец программы

;Обмен элементов местами
CHNG:   MOV AH,[DI]    ;AH=первый элемент массива
        MOV [DI],AL    ;Первый элемент массива = второму положительному
        MOV [SI-1],AH  ;Второй положительный элемент = первому
        MOV AH,09H     ;9-ая функция DOS API INT 21H - вывод строки
        LEA DX,chgmsg  ;Адрес строки для вывода
        INT 21H        ;Вывод строки на экран

Q:      INT 20H        ;Завершение работы

END